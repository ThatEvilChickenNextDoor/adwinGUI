--alt_u_div DEVICE_FAMILY="Cyclone II" LPM_PIPELINE=0 MAXIMIZE_SPEED=5 SKIP_BITS=0 WIDTH_D=4 WIDTH_N=12 WIDTH_Q=12 WIDTH_R=4 denominator numerator quotient remainder
--VERSION_BEGIN 7.1SP1 cbx_cycloneii 2007:01:23:09:39:40:SJ cbx_lpm_abs 2006:04:25:14:52:42:SJ cbx_lpm_add_sub 2007:01:08:11:15:18:SJ cbx_lpm_divide 2007:01:30:03:58:02:SJ cbx_mgl 2007:06:11:08:05:04:SJ cbx_stratix 2007:04:12:16:43:52:SJ cbx_stratixii 2007:02:12:17:08:26:SJ cbx_util_mgl 2007:01:15:12:22:48:SJ  VERSION_END


-- Copyright (C) 1991-2007 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION add_sub_lkc (dataa[0..0], datab[0..0])
RETURNS ( cout, result[0..0]);
FUNCTION add_sub_mkc (dataa[1..0], datab[1..0])
RETURNS ( cout, result[1..0]);

--synthesis_resources = lut 57 
SUBDESIGN alt_u_div_e2f
( 
	den_out[3..0]	:	output;
	denominator[3..0]	:	input;
	numerator[11..0]	:	input;
	quotient[11..0]	:	output;
	remainder[3..0]	:	output;
) 
VARIABLE 
	add_sub_0 : add_sub_lkc;
	add_sub_1 : add_sub_mkc;
	add_sub_10_result_int[5..0]	:	WIRE;
	add_sub_10_cout	:	WIRE;
	add_sub_10_dataa[4..0]	:	WIRE;
	add_sub_10_datab[4..0]	:	WIRE;
	add_sub_10_result[4..0]	:	WIRE;
	add_sub_11_result_int[5..0]	:	WIRE;
	add_sub_11_cout	:	WIRE;
	add_sub_11_dataa[4..0]	:	WIRE;
	add_sub_11_datab[4..0]	:	WIRE;
	add_sub_11_result[4..0]	:	WIRE;
	add_sub_2_result_int[3..0]	:	WIRE;
	add_sub_2_cout	:	WIRE;
	add_sub_2_dataa[2..0]	:	WIRE;
	add_sub_2_datab[2..0]	:	WIRE;
	add_sub_2_result[2..0]	:	WIRE;
	add_sub_3_result_int[4..0]	:	WIRE;
	add_sub_3_cout	:	WIRE;
	add_sub_3_dataa[3..0]	:	WIRE;
	add_sub_3_datab[3..0]	:	WIRE;
	add_sub_3_result[3..0]	:	WIRE;
	add_sub_4_result_int[5..0]	:	WIRE;
	add_sub_4_cout	:	WIRE;
	add_sub_4_dataa[4..0]	:	WIRE;
	add_sub_4_datab[4..0]	:	WIRE;
	add_sub_4_result[4..0]	:	WIRE;
	add_sub_5_result_int[5..0]	:	WIRE;
	add_sub_5_cout	:	WIRE;
	add_sub_5_dataa[4..0]	:	WIRE;
	add_sub_5_datab[4..0]	:	WIRE;
	add_sub_5_result[4..0]	:	WIRE;
	add_sub_6_result_int[5..0]	:	WIRE;
	add_sub_6_cout	:	WIRE;
	add_sub_6_dataa[4..0]	:	WIRE;
	add_sub_6_datab[4..0]	:	WIRE;
	add_sub_6_result[4..0]	:	WIRE;
	add_sub_7_result_int[5..0]	:	WIRE;
	add_sub_7_cout	:	WIRE;
	add_sub_7_dataa[4..0]	:	WIRE;
	add_sub_7_datab[4..0]	:	WIRE;
	add_sub_7_result[4..0]	:	WIRE;
	add_sub_8_result_int[5..0]	:	WIRE;
	add_sub_8_cout	:	WIRE;
	add_sub_8_dataa[4..0]	:	WIRE;
	add_sub_8_datab[4..0]	:	WIRE;
	add_sub_8_result[4..0]	:	WIRE;
	add_sub_9_result_int[5..0]	:	WIRE;
	add_sub_9_cout	:	WIRE;
	add_sub_9_dataa[4..0]	:	WIRE;
	add_sub_9_datab[4..0]	:	WIRE;
	add_sub_9_result[4..0]	:	WIRE;
	DenominatorIn[64..0]	: WIRE;
	DenominatorIn_tmp[64..0]	: WIRE;
	gnd_wire	: WIRE;
	nose[155..0]	: WIRE;
	NumeratorIn[155..0]	: WIRE;
	NumeratorIn_tmp[155..0]	: WIRE;
	prestg[59..0]	: WIRE;
	quotient_tmp[11..0]	: WIRE;
	sel[51..0]	: WIRE;
	selnose[155..0]	: WIRE;
	StageIn[64..0]	: WIRE;
	StageIn_tmp[64..0]	: WIRE;
	StageOut[59..0]	: WIRE;

BEGIN 
	add_sub_0.dataa[0..0] = NumeratorIn[11..11];
	add_sub_0.datab[0..0] = DenominatorIn[0..0];
	add_sub_1.dataa[] = ( StageIn[5..5], NumeratorIn[22..22]);
	add_sub_1.datab[1..0] = DenominatorIn[6..5];
	add_sub_10_result_int[] = (0, add_sub_10_dataa[]) - (0, add_sub_10_datab[]);
	add_sub_10_result[] = add_sub_10_result_int[4..0];
	add_sub_10_cout = !add_sub_10_result_int[5];
	add_sub_10_dataa[] = ( StageIn[53..50], NumeratorIn[121..121]);
	add_sub_10_datab[] = DenominatorIn[54..50];
	add_sub_11_result_int[] = (0, add_sub_11_dataa[]) - (0, add_sub_11_datab[]);
	add_sub_11_result[] = add_sub_11_result_int[4..0];
	add_sub_11_cout = !add_sub_11_result_int[5];
	add_sub_11_dataa[] = ( StageIn[58..55], NumeratorIn[132..132]);
	add_sub_11_datab[] = DenominatorIn[59..55];
	add_sub_2_result_int[] = (0, add_sub_2_dataa[]) - (0, add_sub_2_datab[]);
	add_sub_2_result[] = add_sub_2_result_int[2..0];
	add_sub_2_cout = !add_sub_2_result_int[3];
	add_sub_2_dataa[] = ( StageIn[11..10], NumeratorIn[33..33]);
	add_sub_2_datab[] = DenominatorIn[12..10];
	add_sub_3_result_int[] = (0, add_sub_3_dataa[]) - (0, add_sub_3_datab[]);
	add_sub_3_result[] = add_sub_3_result_int[3..0];
	add_sub_3_cout = !add_sub_3_result_int[4];
	add_sub_3_dataa[] = ( StageIn[17..15], NumeratorIn[44..44]);
	add_sub_3_datab[] = DenominatorIn[18..15];
	add_sub_4_result_int[] = (0, add_sub_4_dataa[]) - (0, add_sub_4_datab[]);
	add_sub_4_result[] = add_sub_4_result_int[4..0];
	add_sub_4_cout = !add_sub_4_result_int[5];
	add_sub_4_dataa[] = ( StageIn[23..20], NumeratorIn[55..55]);
	add_sub_4_datab[] = DenominatorIn[24..20];
	add_sub_5_result_int[] = (0, add_sub_5_dataa[]) - (0, add_sub_5_datab[]);
	add_sub_5_result[] = add_sub_5_result_int[4..0];
	add_sub_5_cout = !add_sub_5_result_int[5];
	add_sub_5_dataa[] = ( StageIn[28..25], NumeratorIn[66..66]);
	add_sub_5_datab[] = DenominatorIn[29..25];
	add_sub_6_result_int[] = (0, add_sub_6_dataa[]) - (0, add_sub_6_datab[]);
	add_sub_6_result[] = add_sub_6_result_int[4..0];
	add_sub_6_cout = !add_sub_6_result_int[5];
	add_sub_6_dataa[] = ( StageIn[33..30], NumeratorIn[77..77]);
	add_sub_6_datab[] = DenominatorIn[34..30];
	add_sub_7_result_int[] = (0, add_sub_7_dataa[]) - (0, add_sub_7_datab[]);
	add_sub_7_result[] = add_sub_7_result_int[4..0];
	add_sub_7_cout = !add_sub_7_result_int[5];
	add_sub_7_dataa[] = ( StageIn[38..35], NumeratorIn[88..88]);
	add_sub_7_datab[] = DenominatorIn[39..35];
	add_sub_8_result_int[] = (0, add_sub_8_dataa[]) - (0, add_sub_8_datab[]);
	add_sub_8_result[] = add_sub_8_result_int[4..0];
	add_sub_8_cout = !add_sub_8_result_int[5];
	add_sub_8_dataa[] = ( StageIn[43..40], NumeratorIn[99..99]);
	add_sub_8_datab[] = DenominatorIn[44..40];
	add_sub_9_result_int[] = (0, add_sub_9_dataa[]) - (0, add_sub_9_datab[]);
	add_sub_9_result[] = add_sub_9_result_int[4..0];
	add_sub_9_cout = !add_sub_9_result_int[5];
	add_sub_9_dataa[] = ( StageIn[48..45], NumeratorIn[110..110]);
	add_sub_9_datab[] = DenominatorIn[49..45];
	den_out[3..0] = DenominatorIn[58..55];
	DenominatorIn[] = (gnd_wire # DenominatorIn_tmp[]);
	DenominatorIn_tmp[] = ( DenominatorIn[59..0], ( gnd_wire, denominator[]));
	gnd_wire = B"0";
	nose[] = ( B"000000000000", (add_sub_11_cout # gnd_wire), B"000000000000", (add_sub_10_cout # gnd_wire), B"000000000000", (add_sub_9_cout # gnd_wire), B"000000000000", (add_sub_8_cout # gnd_wire), B"000000000000", (add_sub_7_cout # gnd_wire), B"000000000000", (add_sub_6_cout # gnd_wire), B"000000000000", (add_sub_5_cout # gnd_wire), B"000000000000", (add_sub_4_cout # gnd_wire), B"000000000000", (add_sub_3_cout # gnd_wire), B"000000000000", (add_sub_2_cout # gnd_wire), B"000000000000", (add_sub_1.cout # gnd_wire), B"000000000000", (add_sub_0.cout # gnd_wire));
	NumeratorIn[] = (gnd_wire # NumeratorIn_tmp[]);
	NumeratorIn_tmp[] = ( NumeratorIn[143..0], numerator[]);
	prestg[] = ( add_sub_11_result[], add_sub_10_result[], add_sub_9_result[], add_sub_8_result[], add_sub_7_result[], add_sub_6_result[], add_sub_5_result[], add_sub_4_result[], GND, add_sub_3_result[], B"00", add_sub_2_result[], B"000", add_sub_1.result[], B"0000", add_sub_0.result[]);
	quotient[] = quotient_tmp[];
	quotient_tmp[] = ( (! selnose[0..0]), (! selnose[13..13]), (! selnose[26..26]), (! selnose[39..39]), (! selnose[52..52]), (! selnose[65..65]), (! selnose[78..78]), (! selnose[91..91]), (! selnose[104..104]), (! selnose[117..117]), (! selnose[130..130]), (! selnose[143..143]));
	remainder[3..0] = StageIn[63..60];
	sel[] = ( gnd_wire, (gnd_wire # (sel[51..51] # DenominatorIn[63..63])), (gnd_wire # (sel[50..50] # DenominatorIn[62..62])), (gnd_wire # (sel[49..49] # DenominatorIn[61..61])), gnd_wire, (gnd_wire # (sel[47..47] # DenominatorIn[58..58])), (gnd_wire # (sel[46..46] # DenominatorIn[57..57])), (gnd_wire # (sel[45..45] # DenominatorIn[56..56])), gnd_wire, (gnd_wire # (sel[43..43] # DenominatorIn[53..53])), (gnd_wire # (sel[42..42] # DenominatorIn[52..52])), (gnd_wire # (sel[41..41] # DenominatorIn[51..51])), gnd_wire, (gnd_wire # (sel[39..39] # DenominatorIn[48..48])), (gnd_wire # (sel[38..38] # DenominatorIn[47..47])), (gnd_wire # (sel[37..37] # DenominatorIn[46..46])), gnd_wire, (gnd_wire # (sel[35..35] # DenominatorIn[43..43])), (gnd_wire # (sel[34..34] # DenominatorIn[42..42])), (gnd_wire # (sel[33..33] # DenominatorIn[41..41])), gnd_wire, (gnd_wire # (sel[31..31] # DenominatorIn[38..38])), (gnd_wire # (sel[30..30] # DenominatorIn[37..37])), (gnd_wire # (sel[29..29] # DenominatorIn[36..36])), gnd_wire, (gnd_wire # (sel[27..27] # DenominatorIn[33..33])), (gnd_wire # (sel[26..26] # DenominatorIn[32..32])), (gnd_wire # (sel[25..25] # DenominatorIn[31..31])), gnd_wire, (gnd_wire # (sel[23..23] # DenominatorIn[28..28])), (gnd_wire # (sel[22..22] # DenominatorIn[27..27])), (gnd_wire # (sel[21..21] # DenominatorIn[26..26])), gnd_wire, (gnd_wire # (sel[19..19] # DenominatorIn[23..23])), (gnd_wire # (sel[18..18] # DenominatorIn[22..22])), (gnd_wire # (sel[17..17] # DenominatorIn[21..21])), gnd_wire, (gnd_wire # (sel[15..15] # DenominatorIn[18..18])), (gnd_wire # (sel[14..14] # DenominatorIn[17..17])), (gnd_wire # (sel[13..13] # DenominatorIn[16..16])), gnd_wire, (gnd_wire # (sel[11..11] # DenominatorIn[13..13])), (gnd_wire # (sel[10..10] # DenominatorIn[12..12])), (gnd_wire # (sel[9..9] # DenominatorIn[11..11])), gnd_wire, (gnd_wire # (sel[7..7] # DenominatorIn[8..8])), (gnd_wire # (sel[6..6] # DenominatorIn[7..7])), (gnd_wire # (sel[5..5] # DenominatorIn[6..6])), gnd_wire, (gnd_wire # (sel[3..3] # DenominatorIn[3..3])), (gnd_wire # (sel[2..2] # DenominatorIn[2..2])), (gnd_wire # (sel[1..1] # DenominatorIn[1..1])));
	selnose[] = ( (gnd_wire # (! nose[155..155])), (gnd_wire # (! nose[154..154])), (gnd_wire # (! nose[153..153])), (gnd_wire # (! nose[152..152])), (gnd_wire # (! nose[151..151])), (gnd_wire # (! nose[150..150])), (gnd_wire # (! nose[149..149])), (gnd_wire # (! nose[148..148])), ((gnd_wire # (! nose[147..147])) # sel[51..51]), ((gnd_wire # (! nose[146..146])) # sel[50..50]), ((gnd_wire # (! nose[145..145])) # sel[49..49]), ((gnd_wire # (! nose[144..144])) # sel[48..48]), (gnd_wire # (! nose[143..143])), (gnd_wire # (! nose[142..142])), (gnd_wire # (! nose[141..141])), (gnd_wire # (! nose[140..140])), (gnd_wire # (! nose[139..139])), (gnd_wire # (! nose[138..138])), (gnd_wire # (! nose[137..137])), (gnd_wire # (! nose[136..136])), ((gnd_wire # (! nose[135..135])) # sel[47..47]), ((gnd_wire # (! nose[134..134])) # sel[46..46]), ((gnd_wire # (! nose[133..133])) # sel[45..45]), ((gnd_wire # (! nose[132..132])) # sel[44..44]), (gnd_wire # (! nose[131..131])), (gnd_wire # (! nose[130..130])), (gnd_wire # (! nose[129..129])), (gnd_wire # (! nose[128..128])), (gnd_wire # (! nose[127..127])), (gnd_wire # (! nose[126..126])), (gnd_wire # (! nose[125..125])), (gnd_wire # (! nose[124..124])), ((gnd_wire # (! nose[123..123])) # sel[43..43]), ((gnd_wire # (! nose[122..122])) # sel[42..42]), ((gnd_wire # (! nose[121..121])) # sel[41..41]), ((gnd_wire # (! nose[120..120])) # sel[40..40]), (gnd_wire # (! nose[119..119])), (gnd_wire # (! nose[118..118])), (gnd_wire # (! nose[117..117])), (gnd_wire # (! nose[116..116])), (gnd_wire # (! nose[115..115])), (gnd_wire # (! nose[114..114])), (gnd_wire # (! nose[113..113])), (gnd_wire # (! nose[112..112])), ((gnd_wire # (! nose[111..111])) # sel[39..39]), ((gnd_wire # (! nose[110..110])) # sel[38..38]), ((gnd_wire # (! nose[109..109])) # sel[37..37]), ((gnd_wire # (! nose[108..108])) # sel[36..36]), (gnd_wire # (! nose[107..107])), (gnd_wire # (! nose[106..106])), (gnd_wire # (! nose[105..105])), (gnd_wire # (! nose[104..104])), (gnd_wire # (! nose[103..103])), (gnd_wire # (! nose[102..102])), (gnd_wire # (! nose[101..101])), (gnd_wire # (! nose[100..100])), ((gnd_wire # (! nose[99..99])) # sel[35..35]), ((gnd_wire # (! nose[98..98])) # sel[34..34]), ((gnd_wire # (! nose[97..97])) # sel[33..33]), ((gnd_wire # (! nose[96..96])) # sel[32..32]), (gnd_wire # (! nose[95..95])), (gnd_wire # (! nose[94..94])), (gnd_wire # (! nose[93..93])), (gnd_wire # (! nose[92..92])), (gnd_wire # (! nose[91..91])), (gnd_wire # (! nose[90..90])), (gnd_wire # (! nose[89..89])), (gnd_wire # (! nose[88..88])), ((gnd_wire # (! nose[87..87])) # sel[31..31]), ((gnd_wire # (! nose[86..86])) # sel[30..30]), ((gnd_wire # (! nose[85..85])) # sel[29..29]), ((gnd_wire # (! nose[84..84])) # sel[28..28]), (gnd_wire # (! nose[83..83])), (gnd_wire # (! nose[82..82])), (gnd_wire # (! nose[81..81])), (gnd_wire # (! nose[80..80])), (gnd_wire # (! nose[79..79])), (gnd_wire # (! nose[78..78])), (gnd_wire # (! nose[77..77])), (gnd_wire # (! nose[76..76])), ((gnd_wire # (! nose[75..75])) # sel[27..27]), ((gnd_wire # (! nose[74..74])) # sel[26..26]), ((gnd_wire # (! nose[73..73])) # sel[25..25]), ((gnd_wire # (! nose[72..72])) # sel[24..24]), (gnd_wire # (! nose[71..71])), (gnd_wire # (! nose[70..70])), (gnd_wire # (! nose[69..69])), (gnd_wire # (! nose[68..68])), (gnd_wire # (! nose[67..67])), (gnd_wire # (! nose[66..66])), (gnd_wire # (! nose[65..65])), (gnd_wire # (! nose[64..64])), ((gnd_wire # (! nose[63..63])) # sel[23..23]), ((gnd_wire # (! nose[62..62])) # sel[22..22]), ((gnd_wire # (! nose[61..61])) # sel[21..21]), ((gnd_wire # (! nose[60..60])) # sel[20..20]), (gnd_wire # (! nose[59..59])), (gnd_wire # (! nose[58..58])), (gnd_wire # (! nose[57..57])), (gnd_wire # (! nose[56..56])), (gnd_wire # (! nose[55..55])), (gnd_wire # (! nose[54..54])), (gnd_wire # (! nose[53..53])), (gnd_wire # (! nose[52..52])), ((gnd_wire # (! nose[51..51])) # sel[19..19]), ((gnd_wire # (! nose[50..50])) # sel[18..18]), ((gnd_wire # (! nose[49..49])) # sel[17..17]), ((gnd_wire # (! nose[48..48])) # sel[16..16]), (gnd_wire # (! nose[47..47])), (gnd_wire # (! nose[46..46])), (gnd_wire # (! nose[45..45])), (gnd_wire # (! nose[44..44])), (gnd_wire # (! nose[43..43])), (gnd_wire # (! nose[42..42])), (gnd_wire # (! nose[41..41])), (gnd_wire # (! nose[40..40])), ((gnd_wire # (! nose[39..39])) # sel[15..15]), ((gnd_wire # (! nose[38..38])) # sel[14..14]), ((gnd_wire # (! nose[37..37])) # sel[13..13]), ((gnd_wire # (! nose[36..36])) # sel[12..12]), (gnd_wire # (! nose[35..35])), (gnd_wire # (! nose[34..34])), (gnd_wire # (! nose[33..33])), (gnd_wire # (! nose[32..32])), (gnd_wire # (! nose[31..31])), (gnd_wire # (! nose[30..30])), (gnd_wire # (! nose[29..29])), (gnd_wire # (! nose[28..28])), ((gnd_wire # (! nose[27..27])) # sel[11..11]), ((gnd_wire # (! nose[26..26])) # sel[10..10]), ((gnd_wire # (! nose[25..25])) # sel[9..9]), ((gnd_wire # (! nose[24..24])) # sel[8..8]), (gnd_wire # (! nose[23..23])), (gnd_wire # (! nose[22..22])), (gnd_wire # (! nose[21..21])), (gnd_wire # (! nose[20..20])), (gnd_wire # (! nose[19..19])), (gnd_wire # (! nose[18..18])), (gnd_wire # (! nose[17..17])), (gnd_wire # (! nose[16..16])), ((gnd_wire # (! nose[15..15])) # sel[7..7]), ((gnd_wire # (! nose[14..14])) # sel[6..6]), ((gnd_wire # (! nose[13..13])) # sel[5..5]), ((gnd_wire # (! nose[12..12])) # sel[4..4]), (gnd_wire # (! nose[11..11])), (gnd_wire # (! nose[10..10])), (gnd_wire # (! nose[9..9])), (gnd_wire # (! nose[8..8])), (gnd_wire # (! nose[7..7])), (gnd_wire # (! nose[6..6])), (gnd_wire # (! nose[5..5])), (gnd_wire # (! nose[4..4])), ((gnd_wire # (! nose[3..3])) # sel[3..3]), ((gnd_wire # (! nose[2..2])) # sel[2..2]), ((gnd_wire # (! nose[1..1])) # sel[1..1]), ((gnd_wire # (! nose[0..0])) # sel[0..0]));
	StageIn[] = (gnd_wire # StageIn_tmp[]);
	StageIn_tmp[] = ( StageOut[59..0], B"00000");
	StageOut[] = ( ((( StageIn[58..55], NumeratorIn[132..132]) & selnose[143..143]) # (prestg[59..55] & (! selnose[143..143]))), ((( StageIn[53..50], NumeratorIn[121..121]) & selnose[130..130]) # (prestg[54..50] & (! selnose[130..130]))), ((( StageIn[48..45], NumeratorIn[110..110]) & selnose[117..117]) # (prestg[49..45] & (! selnose[117..117]))), ((( StageIn[43..40], NumeratorIn[99..99]) & selnose[104..104]) # (prestg[44..40] & (! selnose[104..104]))), ((( StageIn[38..35], NumeratorIn[88..88]) & selnose[91..91]) # (prestg[39..35] & (! selnose[91..91]))), ((( StageIn[33..30], NumeratorIn[77..77]) & selnose[78..78]) # (prestg[34..30] & (! selnose[78..78]))), ((( StageIn[28..25], NumeratorIn[66..66]) & selnose[65..65]) # (prestg[29..25] & (! selnose[65..65]))), ((( StageIn[23..20], NumeratorIn[55..55]) & selnose[52..52]) # (prestg[24..20] & (! selnose[52..52]))), ((( StageIn[18..15], NumeratorIn[44..44]) & selnose[39..39]) # (prestg[19..15] & (! selnose[39..39]))), ((( StageIn[13..10], NumeratorIn[33..33]) & selnose[26..26]) # (prestg[14..10] & (! selnose[26..26]))), ((( StageIn[8..5], NumeratorIn[22..22]) & selnose[13..13]) # (prestg[9..5] & (! selnose[13..13]))), ((( StageIn[3..0], NumeratorIn[11..11]) & selnose[0..0]) # (prestg[4..0] & (! selnose[0..0]))));
END;
--VALID FILE
