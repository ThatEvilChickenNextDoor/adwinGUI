|selection_storer
fifty_MHz_int_clock => fifty_MHz_int_clock~0.IN3
ten_MHz_synch_input => ten_MHz_synch_input~0.IN1
sending_trigger_input => sending_trigger_input~0.IN1
switch_number_input[0] => switch_number_input[0]~11.IN1
switch_number_input[1] => switch_number_input[1]~10.IN1
switch_number_input[2] => switch_number_input[2]~9.IN1
switch_number_input[3] => switch_number_input[3]~8.IN1
switch_number_input[4] => switch_number_input[4]~7.IN1
switch_number_input[5] => switch_number_input[5]~6.IN1
switch_number_input[6] => switch_number_input[6]~5.IN1
switch_number_input[7] => switch_number_input[7]~4.IN1
switch_number_input[8] => switch_number_input[8]~3.IN1
switch_number_input[9] => switch_number_input[9]~2.IN1
switch_number_input[10] => switch_number_input[10]~1.IN1
switch_number_input[11] => switch_number_input[11]~0.IN1
queue[0] => queue[0]~2.IN1
queue[1] => queue[1]~1.IN1
queue[2] => queue[2]~0.IN1
key_0 => key_0~0.IN1
key_2 => key_2~0.IN1
saftey_switch => saftey_switch~0.IN1
serial_input => serial_input~0.IN1
displaying_trigger_input => displaying_trigger_input~0.IN1
data_ctrl_input => data_ctrl_input~0.IN1
ten_MHz_synch_output <= data_switch_send:data_switch_sending.port4
data_ctrl_output <= data_switch_send:data_switch_sending.port6
Hex_displays[0] <= Hex_displayer:Hex_displaying.port1
Hex_displays[1] <= Hex_displayer:Hex_displaying.port1
Hex_displays[2] <= Hex_displayer:Hex_displaying.port1
Hex_displays[3] <= Hex_displayer:Hex_displaying.port1
Hex_displays[4] <= Hex_displayer:Hex_displaying.port1
Hex_displays[5] <= Hex_displayer:Hex_displaying.port1
Hex_displays[6] <= Hex_displayer:Hex_displaying.port1
Hex_displays[7] <= Hex_displayer:Hex_displaying.port1
Hex_displays[8] <= Hex_displayer:Hex_displaying.port1
Hex_displays[9] <= Hex_displayer:Hex_displaying.port1
Hex_displays[10] <= Hex_displayer:Hex_displaying.port1
Hex_displays[11] <= Hex_displayer:Hex_displaying.port1
Hex_displays[12] <= Hex_displayer:Hex_displaying.port1
Hex_displays[13] <= Hex_displayer:Hex_displaying.port1
Hex_displays[14] <= Hex_displayer:Hex_displaying.port1
Hex_displays[15] <= Hex_displayer:Hex_displaying.port1
Hex_displays[16] <= Hex_displayer:Hex_displaying.port1
Hex_displays[17] <= Hex_displayer:Hex_displaying.port1
Hex_displays[18] <= Hex_displayer:Hex_displaying.port1
Hex_displays[19] <= Hex_displayer:Hex_displaying.port1
Hex_displays[20] <= Hex_displayer:Hex_displaying.port1
Hex_displays[21] <= Hex_displayer:Hex_displaying.port1
Hex_displays[22] <= Hex_displayer:Hex_displaying.port1
Hex_displays[23] <= Hex_displayer:Hex_displaying.port1
Hex_displays[24] <= Hex_displayer:Hex_displaying.port1
Hex_displays[25] <= Hex_displayer:Hex_displaying.port1
Hex_displays[26] <= Hex_displayer:Hex_displaying.port1
Hex_displays[27] <= Hex_displayer:Hex_displaying.port1
Hex_displays[28] <= Hex_displayer:Hex_displaying.port1
Hex_displays[29] <= Hex_displayer:Hex_displaying.port1
Hex_displays[30] <= Hex_displayer:Hex_displaying.port1
Hex_displays[31] <= Hex_displayer:Hex_displaying.port1
Hex_displays[32] <= Hex_displayer:Hex_displaying.port1
Hex_displays[33] <= Hex_displayer:Hex_displaying.port1
Hex_displays[34] <= Hex_displayer:Hex_displaying.port1
Hex_displays[35] <= Hex_displayer:Hex_displaying.port1
Hex_displays[36] <= Hex_displayer:Hex_displaying.port1
Hex_displays[37] <= Hex_displayer:Hex_displaying.port1
Hex_displays[38] <= Hex_displayer:Hex_displaying.port1
Hex_displays[39] <= Hex_displayer:Hex_displaying.port1
Hex_displays[40] <= Hex_displayer:Hex_displaying.port1
Hex_displays[41] <= Hex_displayer:Hex_displaying.port1
Hex_displays[42] <= Hex_displayer:Hex_displaying.port1
Hex_displays[43] <= Hex_displayer:Hex_displaying.port1
Hex_displays[44] <= Hex_displayer:Hex_displaying.port1
Hex_displays[45] <= Hex_displayer:Hex_displaying.port1
Hex_displays[46] <= Hex_displayer:Hex_displaying.port1
Hex_displays[47] <= Hex_displayer:Hex_displaying.port1
Hex_displays[48] <= Hex_displayer:Hex_displaying.port1
Hex_displays[49] <= Hex_displayer:Hex_displaying.port1
Hex_displays[50] <= Hex_displayer:Hex_displaying.port1
Hex_displays[51] <= Hex_displayer:Hex_displaying.port1
Hex_displays[52] <= Hex_displayer:Hex_displaying.port1
Hex_displays[53] <= Hex_displayer:Hex_displaying.port1
Hex_displays[54] <= Hex_displayer:Hex_displaying.port1
Hex_displays[55] <= Hex_displayer:Hex_displaying.port1
sending_trigger_output <= trigger_program:trigger_programming.port3
displaying_trigger_output <= trigger_program:trigger_programming.port4
serial_output <= data_switch_send:data_switch_sending.port5


|selection_storer|data_switch_send:data_switch_sending
FiftyMHz_ref_clck => clock_counter[2].CLK
FiftyMHz_ref_clck => clock_counter[1].CLK
FiftyMHz_ref_clck => clock_counter[0].CLK
FiftyMHz_ref_clck => ten_MHz_synch~reg0.CLK
Ten_MHz_wire => counter[22].CLK
Ten_MHz_wire => counter[21].CLK
Ten_MHz_wire => counter[20].CLK
Ten_MHz_wire => counter[19].CLK
Ten_MHz_wire => counter[18].CLK
Ten_MHz_wire => counter[17].CLK
Ten_MHz_wire => counter[16].CLK
Ten_MHz_wire => counter[15].CLK
Ten_MHz_wire => counter[14].CLK
Ten_MHz_wire => counter[13].CLK
Ten_MHz_wire => counter[12].CLK
Ten_MHz_wire => counter[11].CLK
Ten_MHz_wire => counter[10].CLK
Ten_MHz_wire => counter[9].CLK
Ten_MHz_wire => counter[8].CLK
Ten_MHz_wire => counter[7].CLK
Ten_MHz_wire => counter[6].CLK
Ten_MHz_wire => counter[5].CLK
Ten_MHz_wire => counter[4].CLK
Ten_MHz_wire => counter[3].CLK
Ten_MHz_wire => counter[2].CLK
Ten_MHz_wire => counter[1].CLK
Ten_MHz_wire => counter[0].CLK
Ten_MHz_wire => trigger_arm.CLK
Ten_MHz_wire => data_output_reg_12_bits[11].CLK
Ten_MHz_wire => data_output_reg_12_bits[10].CLK
Ten_MHz_wire => data_output_reg_12_bits[9].CLK
Ten_MHz_wire => data_output_reg_12_bits[8].CLK
Ten_MHz_wire => data_output_reg_12_bits[7].CLK
Ten_MHz_wire => data_output_reg_12_bits[6].CLK
Ten_MHz_wire => data_output_reg_12_bits[5].CLK
Ten_MHz_wire => data_output_reg_12_bits[4].CLK
Ten_MHz_wire => data_output_reg_12_bits[3].CLK
Ten_MHz_wire => data_output_reg_12_bits[2].CLK
Ten_MHz_wire => data_output_reg_12_bits[1].CLK
Ten_MHz_wire => data_output_reg_12_bits[0].CLK
Ten_MHz_wire => trigger_flag.CLK
Ten_MHz_wire => dflag~reg0.CLK
Ten_MHz_wire => serial_data_out_1_bit~reg0.CLK
Ten_MHz_wire => M[31].CLK
Ten_MHz_wire => M[30].CLK
Ten_MHz_wire => M[29].CLK
Ten_MHz_wire => M[28].CLK
Ten_MHz_wire => M[27].CLK
Ten_MHz_wire => M[26].CLK
Ten_MHz_wire => M[25].CLK
Ten_MHz_wire => M[24].CLK
Ten_MHz_wire => M[23].CLK
Ten_MHz_wire => M[22].CLK
Ten_MHz_wire => M[21].CLK
Ten_MHz_wire => M[20].CLK
Ten_MHz_wire => M[19].CLK
Ten_MHz_wire => M[18].CLK
Ten_MHz_wire => M[17].CLK
Ten_MHz_wire => M[16].CLK
Ten_MHz_wire => M[15].CLK
Ten_MHz_wire => M[14].CLK
Ten_MHz_wire => M[13].CLK
Ten_MHz_wire => M[12].CLK
Ten_MHz_wire => M[11].CLK
Ten_MHz_wire => M[10].CLK
Ten_MHz_wire => M[9].CLK
Ten_MHz_wire => M[8].CLK
Ten_MHz_wire => M[7].CLK
Ten_MHz_wire => M[6].CLK
Ten_MHz_wire => M[5].CLK
Ten_MHz_wire => M[4].CLK
Ten_MHz_wire => M[3].CLK
Ten_MHz_wire => M[2].CLK
Ten_MHz_wire => M[1].CLK
Ten_MHz_wire => M[0].CLK
sending_trigger_in => always0~0.IN1
switches_in[0] => data_output_reg_12_bits[0].DATAIN
switches_in[1] => data_output_reg_12_bits[1].DATAIN
switches_in[2] => data_output_reg_12_bits[2].DATAIN
switches_in[3] => data_output_reg_12_bits[3].DATAIN
switches_in[4] => data_output_reg_12_bits[4].DATAIN
switches_in[5] => data_output_reg_12_bits[5].DATAIN
switches_in[6] => data_output_reg_12_bits[6].DATAIN
switches_in[7] => data_output_reg_12_bits[7].DATAIN
switches_in[8] => data_output_reg_12_bits[8].DATAIN
switches_in[9] => data_output_reg_12_bits[9].DATAIN
switches_in[10] => data_output_reg_12_bits[10].DATAIN
switches_in[11] => data_output_reg_12_bits[11].DATAIN
ten_MHz_synch <= ten_MHz_synch~reg0.DB_MAX_OUTPUT_PORT_TYPE
serial_data_out_1_bit <= serial_data_out_1_bit~reg0.DB_MAX_OUTPUT_PORT_TYPE
dflag <= dflag~reg0.DB_MAX_OUTPUT_PORT_TYPE


|selection_storer|clock_maker:clock_making
FiftyMHz_ref_clock => clock_counter[2].CLK
FiftyMHz_ref_clock => clock_counter[1].CLK
FiftyMHz_ref_clock => clock_counter[0].CLK
FiftyMHz_ref_clock => TenMHz_output~reg0.CLK
TenMHz_output <= TenMHz_output~reg0.DB_MAX_OUTPUT_PORT_TYPE


|selection_storer|data_read_write:data_reading_writing
ten_MHz_synch_in => data_reg0[11].CLK
ten_MHz_synch_in => data_reg0[10].CLK
ten_MHz_synch_in => data_reg0[9].CLK
ten_MHz_synch_in => data_reg0[8].CLK
ten_MHz_synch_in => data_reg0[7].CLK
ten_MHz_synch_in => data_reg0[6].CLK
ten_MHz_synch_in => data_reg0[5].CLK
ten_MHz_synch_in => data_reg0[4].CLK
ten_MHz_synch_in => data_reg0[3].CLK
ten_MHz_synch_in => data_reg0[2].CLK
ten_MHz_synch_in => data_reg0[1].CLK
ten_MHz_synch_in => data_reg0[0].CLK
ten_MHz_synch_in => data_reg1[11].CLK
ten_MHz_synch_in => data_reg1[10].CLK
ten_MHz_synch_in => data_reg1[9].CLK
ten_MHz_synch_in => data_reg1[8].CLK
ten_MHz_synch_in => data_reg1[7].CLK
ten_MHz_synch_in => data_reg1[6].CLK
ten_MHz_synch_in => data_reg1[5].CLK
ten_MHz_synch_in => data_reg1[4].CLK
ten_MHz_synch_in => data_reg1[3].CLK
ten_MHz_synch_in => data_reg1[2].CLK
ten_MHz_synch_in => data_reg1[1].CLK
ten_MHz_synch_in => data_reg1[0].CLK
ten_MHz_synch_in => N[31].CLK
ten_MHz_synch_in => N[30].CLK
ten_MHz_synch_in => N[29].CLK
ten_MHz_synch_in => N[28].CLK
ten_MHz_synch_in => N[27].CLK
ten_MHz_synch_in => N[26].CLK
ten_MHz_synch_in => N[25].CLK
ten_MHz_synch_in => N[24].CLK
ten_MHz_synch_in => N[23].CLK
ten_MHz_synch_in => N[22].CLK
ten_MHz_synch_in => N[21].CLK
ten_MHz_synch_in => N[20].CLK
ten_MHz_synch_in => N[19].CLK
ten_MHz_synch_in => N[18].CLK
ten_MHz_synch_in => N[17].CLK
ten_MHz_synch_in => N[16].CLK
ten_MHz_synch_in => N[15].CLK
ten_MHz_synch_in => N[14].CLK
ten_MHz_synch_in => N[13].CLK
ten_MHz_synch_in => N[12].CLK
ten_MHz_synch_in => N[11].CLK
ten_MHz_synch_in => N[10].CLK
ten_MHz_synch_in => N[9].CLK
ten_MHz_synch_in => N[8].CLK
ten_MHz_synch_in => N[7].CLK
ten_MHz_synch_in => N[6].CLK
ten_MHz_synch_in => N[5].CLK
ten_MHz_synch_in => N[4].CLK
ten_MHz_synch_in => N[3].CLK
ten_MHz_synch_in => N[2].CLK
ten_MHz_synch_in => N[1].CLK
ten_MHz_synch_in => N[0].CLK
ten_MHz_synch_in => Hex_display_no[11]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[10]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[9]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[8]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[7]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[6]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[5]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[4]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[3]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[2]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[1]~reg0.CLK
ten_MHz_synch_in => Hex_display_no[0]~reg0.CLK
data_ctrl_in => always0~0.IN1
serial_in => data_reg1~11.DATAB
serial_in => data_reg1~10.DATAB
serial_in => data_reg1~9.DATAB
serial_in => data_reg1~8.DATAB
serial_in => data_reg1~7.DATAB
serial_in => data_reg1~6.DATAB
serial_in => data_reg1~5.DATAB
serial_in => data_reg1~4.DATAB
serial_in => data_reg1~3.DATAB
serial_in => data_reg1~2.DATAB
serial_in => data_reg1~1.DATAB
serial_in => data_reg1~0.DATAB
serial_in => data_reg0~11.DATAB
serial_in => data_reg0~10.DATAB
serial_in => data_reg0~9.DATAB
serial_in => data_reg0~8.DATAB
serial_in => data_reg0~7.DATAB
serial_in => data_reg0~6.DATAB
serial_in => data_reg0~5.DATAB
serial_in => data_reg0~4.DATAB
serial_in => data_reg0~3.DATAB
serial_in => data_reg0~2.DATAB
serial_in => data_reg0~1.DATAB
serial_in => data_reg0~0.DATAB
queue0[0] => Equal0.IN29
queue0[0] => Equal1.IN0
queue0[1] => Equal0.IN30
queue0[1] => Equal1.IN30
queue0[2] => Equal0.IN31
queue0[2] => Equal1.IN31
safe_switch => always0~1.IN1
displaying_trigger_in => always0~2.IN1
Hex_display_no[0] <= Hex_display_no[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[1] <= Hex_display_no[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[2] <= Hex_display_no[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[3] <= Hex_display_no[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[4] <= Hex_display_no[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[5] <= Hex_display_no[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[6] <= Hex_display_no[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[7] <= Hex_display_no[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[8] <= Hex_display_no[8]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[9] <= Hex_display_no[9]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[10] <= Hex_display_no[10]~reg0.DB_MAX_OUTPUT_PORT_TYPE
Hex_display_no[11] <= Hex_display_no[11]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|selection_storer|Hex_displayer:Hex_displaying
display_data[0] => Div0.IN15
display_data[0] => Mod0.IN15
display_data[1] => Div0.IN14
display_data[1] => Mod0.IN14
display_data[2] => Div0.IN13
display_data[2] => Mod0.IN13
display_data[3] => Div0.IN12
display_data[3] => Mod0.IN12
display_data[4] => Div0.IN11
display_data[4] => Mod0.IN11
display_data[5] => Div0.IN10
display_data[5] => Mod0.IN10
display_data[6] => Div0.IN9
display_data[6] => Mod0.IN9
display_data[7] => Div0.IN8
display_data[7] => Mod0.IN8
display_data[8] => Div0.IN7
display_data[8] => Mod0.IN7
display_data[9] => Div0.IN6
display_data[9] => Mod0.IN6
display_data[10] => Div0.IN5
display_data[10] => Mod0.IN5
display_data[11] => Div0.IN4
display_data[11] => Mod0.IN4
HexDisplay_output[0] <= output_singledisplay_7bit~50.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[1] <= output_singledisplay_7bit~49.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[2] <= output_singledisplay_7bit~48.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[3] <= output_singledisplay_7bit~47.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[4] <= output_singledisplay_7bit~46.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[5] <= output_singledisplay_7bit~45.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[6] <= output_singledisplay_7bit~44.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[7] <= display1~20.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[8] <= display1~19.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[9] <= display1~18.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[10] <= display1~17.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[11] <= display1~16.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[12] <= display1~15.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[13] <= display1~14.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[14] <= display2~13.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[15] <= display2~12.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[16] <= display2~11.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[17] <= display2~10.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[18] <= display2~9.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[19] <= display2~8.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[20] <= display2~7.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[21] <= display3~6.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[22] <= display3~5.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[23] <= display3~4.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[24] <= display3~3.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[25] <= display3~2.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[26] <= display3~1.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[27] <= display3~0.DB_MAX_OUTPUT_PORT_TYPE
HexDisplay_output[28] <= <VCC>
HexDisplay_output[29] <= <VCC>
HexDisplay_output[30] <= <VCC>
HexDisplay_output[31] <= <VCC>
HexDisplay_output[32] <= <VCC>
HexDisplay_output[33] <= <VCC>
HexDisplay_output[34] <= <VCC>
HexDisplay_output[35] <= <VCC>
HexDisplay_output[36] <= <VCC>
HexDisplay_output[37] <= <VCC>
HexDisplay_output[38] <= <VCC>
HexDisplay_output[39] <= <VCC>
HexDisplay_output[40] <= <VCC>
HexDisplay_output[41] <= <VCC>
HexDisplay_output[42] <= <VCC>
HexDisplay_output[43] <= <VCC>
HexDisplay_output[44] <= <VCC>
HexDisplay_output[45] <= <VCC>
HexDisplay_output[46] <= <VCC>
HexDisplay_output[47] <= <VCC>
HexDisplay_output[48] <= <VCC>
HexDisplay_output[49] <= <VCC>
HexDisplay_output[50] <= <VCC>
HexDisplay_output[51] <= <VCC>
HexDisplay_output[52] <= <VCC>
HexDisplay_output[53] <= <VCC>
HexDisplay_output[54] <= <VCC>
HexDisplay_output[55] <= <VCC>


|selection_storer|trigger_program:trigger_programming
fifty_MHz_clock => send_trigger_output~reg0.CLK
fifty_MHz_clock => display_trigger_output~reg0.CLK
key0 => send_trigger_output~1.OUTPUTSELECT
key0 => send_trigger_output~0.OUTPUTSELECT
key2 => display_trigger_output~1.OUTPUTSELECT
key2 => display_trigger_output~0.OUTPUTSELECT
send_trigger_output <= send_trigger_output~reg0.DB_MAX_OUTPUT_PORT_TYPE
display_trigger_output <= display_trigger_output~reg0.DB_MAX_OUTPUT_PORT_TYPE


